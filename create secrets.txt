create secrets

kubectl create secret generic my-secret --from-literal=DB_HOST=db-host --from-literal=DB_MODE=PRODUCTION --from-literal=DB_NAME=db-name --from-literal=DB_USER_NAME=db-user-name --from-literal=DB_PASSWORD=db-password --from-literal=JWT_SECRET=jwt-secret --from-literal=TWILIO_ACCOUNT_SID=twilio-account-sid --from-literal=TWILIO_AUTH_TOKEN=twilio-auth-token --from-literal=TWILIO_FROM_NUMBER="twilio-from-number"

or

kubectl create secret generic my-secret \
--from-literal=DB_HOST= \
--from-literal=DB_MODE= \
--from-literal=DB_NAME= \
--from-literal=DB_USER_NAME= \
--from-literal=DB_PASSWORD= \
--from-literal=JWT_SECRET= \
--from-literal=TWILIO_ACCOUNT_SID= \
--from-literal=TWILIO_AUTH_TOKEN= \
--from-literal=TWILIO_FROM_NUMBER=""

source:

https://kubernetes.io/docs/tasks/inject-data-application/distribute-credentials-secure/
https://medium.com/platformer-blog/using-kubernetes-secrets-5e7530e0378a
http://kubernetesbyexample.com/secrets/


use secrects

    spec:
      containers:
        - name: ciss
          image: iameprel/ciss:0.0.9
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          volumeMounts:
              # name must match the volume name below
              - name: secret-volume
                mountPath: /run/secrets
                readOnly: true
          ports:
            - containerPort: 3000
      # The secret data is exposed to Containers in the Pod through a Volume.
      volumes:
        - name: secret-volume
          secret:
            secretName: my-secret
